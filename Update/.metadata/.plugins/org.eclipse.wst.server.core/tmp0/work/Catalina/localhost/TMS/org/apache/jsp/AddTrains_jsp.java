/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2025-04-23 16:34:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class AddTrains_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>E-Trains</title>\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("    body {\r\n");
      out.write("        background-color: #f8f9fa;\r\n");
      out.write("    }\r\n");
      out.write("    .navbar-brand {\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        font-size: 1.5rem;\r\n");
      out.write("    }\r\n");
      out.write("    .form-container {\r\n");
      out.write("        max-width: 600px;\r\n");
      out.write("        margin: 40px auto;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Header Navbar -->\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"#\">National Ticket Booking Spot</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n");
      out.write("      data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\"\r\n");
      out.write("      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n");
      out.write("      <ul class=\"navbar-nav\">\r\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"AdminHome.jsp\">Home</a></li>\r\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"adminviewtrainfwd\">View Trains</a></li>\r\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"adminsearchtrainfwd\">Search By TrainNo</a></li>\r\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"addtrainfwd\">Add Train</a></li>\r\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"cancletrainfwd\">Delete Train</a></li>\r\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"updatetrain\">Update Train Details</a></li>\r\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"adminlogout\">Logout</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
 if (request.getAttribute("alertMessage") != null) { 
      out.write("\r\n");
      out.write("<div class=\"container mt-3\">\r\n");
      out.write("  <div class=\"alert alert-");
      out.print( request.getAttribute("alertType") );
      out.write(" alert-dismissible fade show\" role=\"alert\">\r\n");
      out.write("    ");
      out.print( request.getAttribute("alertMessage") );
      out.write("\r\n");
      out.write("    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
 } 
      out.write("\r\n");
      out.write("<!-- Welcome Message -->\r\n");
      out.write("<div class=\"container text-center mt-4\">\r\n");
      out.write("  <h3 class=\"text-secondary\">Add Trains</h3>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Form Section -->\r\n");
      out.write("<div class=\"container form-container shadow-sm p-4 bg-white rounded\">\r\n");
      out.write("  <form action=\"adminaddtrain\" method=\"post\">\r\n");
      out.write("    <div class=\"mb-3\">\r\n");
      out.write("      <label for=\"trainno\" class=\"form-label\">Train Number</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"trainno\" name=\"trainno\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"mb-3\">\r\n");
      out.write("      <label for=\"trainname\" class=\"form-label\">Train Name</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"trainname\" name=\"trainname\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"mb-3\">\r\n");
      out.write("      <label for=\"fromstation\" class=\"form-label\">From Station</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"fromstation\" name=\"fromstation\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"mb-3\">\r\n");
      out.write("      <label for=\"tostation\" class=\"form-label\">To Station</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"tostation\" name=\"tostation\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"mb-3\">\r\n");
      out.write("      <label for=\"available\" class=\"form-label\">Available</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"available\" name=\"available\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"mb-3\">\r\n");
      out.write("      <label for=\"fare\" class=\"form-label\">Fare (INR)</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"fare\" name=\"fare\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <button type=\"submit\" class=\"btn btn-success w-100\">Add Train</button>\r\n");
      out.write("  </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
