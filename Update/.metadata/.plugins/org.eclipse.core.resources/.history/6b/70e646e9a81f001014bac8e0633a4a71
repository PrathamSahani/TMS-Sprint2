@WebServlet("/booktrains")
public class BookTrains extends HttpServlet {

	private TrainService trainService = new TrainServiceImpl();
	private BookingService bookingService = new BookingServiceImpl();

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {
		PrintWriter pw = res.getWriter();
		res.setContentType("text/html");
		TrainUtil.validateUserAuthorization(req, UserRole.CUSTOMER);

		RequestDispatcher rd = req.getRequestDispatcher("UserHome.html");
		rd.include(req, res);

		ServletContext sct = req.getServletContext();

		try {
			// Fetching session/context attributes
			Integer seat = (Integer) sct.getAttribute("seats");
			String trainNo = (String) sct.getAttribute("trainnumber");
			String journeyDate = (String) sct.getAttribute("journeydate");
			String seatClass = (String) sct.getAttribute("class");

			// Debug: Print input values
			System.out.println("Debug Info - Seats: " + seat + ", Train No: " + trainNo + ", Date: " + journeyDate + ", Class: " + seatClass);

			if (seat == null || trainNo == null || journeyDate == null || seatClass == null) {
				pw.println("<div class='tab'><p1 class='menu red'>Missing booking details. Please try again.</p1></div>");
				return;
			}

			String userMailId = TrainUtil.getCurrentUserEmail(req);
			SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd");
			SimpleDateFormat outputFormat = new SimpleDateFormat("dd-MMM-yyyy");

			String formattedDate = outputFormat.format(inputFormat.parse(journeyDate));
			TrainBean train = trainService.getTrainById(trainNo);

			if (train == null) {
				pw.println("<div class='tab'><p1 class='menu red'>Invalid Train Number!</p1></div>");
				return;
			}

			int avail = train.getSeats();
			if (seat > avail) {
				pw.println("<div class='tab'><p1 class='menu red'>Only " + avail + " Seats are Available in this Train!</p1></div>");
			} else {
				train.setSeats(avail - seat);
				String responseCode = trainService.updateTrain(train);

				if (ResponseCode.SUCCESS.toString().equalsIgnoreCase(responseCode)) {
					HistoryBean bookingDetails = new HistoryBean();
					Double totalAmount = train.getFare() * seat;

					bookingDetails.setAmount(totalAmount);
					bookingDetails.setFrom_stn(train.getFrom_stn());
					bookingDetails.setTo_stn(train.getTo_stn());
					bookingDetails.setTr_no(trainNo);
					bookingDetails.setSeats(seat);
					bookingDetails.setMailId(userMailId);
					bookingDetails.setDate(formattedDate);

					HistoryBean transaction = bookingService.createHistory(bookingDetails);

					if (transaction != null && transaction.getTransId() != null) {
						pw.println("<div class='tab'><p class='menu green'>" + seat
								+ " Seats Booked Successfully!<br/><br/> Your Transaction Id is: "
								+ transaction.getTransId() + "</p></div>");

						pw.println("<div class='tab'><p class='menu'><table>"
								+ "<tr><td>PNR No: </td><td colspan='3' style='color:blue;'>" + transaction.getTransId()
								+ "</td></tr><tr><td>Train Name: </td><td>" + train.getTr_name()
								+ "</td><td>Train No: </td><td>" + transaction.getTr_no()
								+ "</td></tr><tr><td>Booked From: </td><td>" + transaction.getFrom_stn()
								+ "</td><td>To Station: </td><td>" + transaction.getTo_stn() + "</td></tr>"
								+ "<tr><td>Date Of Journey:</td><td>" + transaction.getDate()
								+ "</td><td>Time(HH:MM):</td><td>11:23</td></tr><tr><td>Passengers: </td><td>"
								+ transaction.getSeats() + "</td><td>Class: </td><td>" + seatClass + "</td></tr>"
								+ "<tr><td>Booking Status: </td><td style='color:green;'>CNF/S10/35</td><td>Amount Paid:</td><td>&#8377; "
								+ transaction.getAmount() + "</td></tr></table></p></div>");
					} else {
						System.out.println("Transaction creation failed: BookingService returned null or invalid object.");
						pw.println("<div class='tab'><p1 class='menu red'>Transaction Declined. Try Again!</p1></div>");
					}
				} else {
					System.out.println("Train update failed. Response code: " + responseCode);
					pw.println("<div class='tab'><p1 class='menu red'>Transaction Declined. Train Update Failed!</p1></div>");
				}
			}
		} catch (Exception e) {
			e.printStackTrace(); // Debug line
			pw.println("<div class='tab'><p1 class='menu red'>Unexpected error occurred: " + e.getMessage() + "</p1></div>");
		} finally {
			sct.removeAttribute("seats");
			sct.removeAttribute("trainnumber");
			sct.removeAttribute("journeydate");
			sct.removeAttribute("class");
		}
	}
}
